generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  customers     Customer[]
}

model Customer {
  id                 String    @id @default(cuid())
  name               String
  email              String
  externalCustomerId String?   @unique
  invoices           Invoice[]
  userId             String
  user               User      @relation(fields: [userId], references: [id])
  createdAt          DateTime  @default(now())
}

model Invoice {
  id                String   @id @default(cuid())
  externalInvoiceId String?  @unique
  customerId        String
  customer          Customer @relation(fields: [customerId], references: [id])
  amount            Float
  status            String
  dueDate           DateTime
  createdAt         DateTime @default(now())
  logs              Log[]
}

model Log {
  id        String   @id @default(cuid())
  invoiceId String
  field     String
  oldValue  String
  newValue  String
  timestamp DateTime @default(now())
  invoice   Invoice  @relation(fields: [invoiceId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
